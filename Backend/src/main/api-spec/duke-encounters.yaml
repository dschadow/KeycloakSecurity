openapi: 3.0.3

info:
  title: Duke Encounters API
  description: |
    **Duke Encounters** is a demo web application with a Spring Boot backend. It is using OpenAPI to generate all endpoints and models and requires a Keycloak.
  version: v1
  contact:
    name: Dominik Schadow
    email: dominikschadow@gmail.com
    url: https://github.com/dschadow/KeycloakSecurity
  license:
    url: https://github.com/dschadow/KeycloakSecurity/blob/main/LICENSE
    name: Apache License 2.0

servers:
  - url: 'http://localhost:8080'

tags:
  - name: Encounter
    description: Mostly authorized endpoints to modify and retrieve encounters with all details

paths:
  /v1/encounters:
    get:
      summary: Get a paginated list with all Duke encounters
      description: Authorized endpoint returning a paginated list of all Duke encounters with all details
      tags:
        - Encounter
      operationId: readEncounters
      security:
        - KeycloakToken: []
      responses:
        200:
          description: A list of Duke encounters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncounterList'
    post:
      summary: Create a new encounters entry
      description: Authorized endpoint creating a new encounters entry
      tags:
        - Encounter
      operationId: createEncounter
      security:
        - KeycloakToken: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEncounter'
      responses:
        201:
          description: Successfully created a new encounter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Encounter'
  /v1/encounters/latest:
    get:
      summary: Get a list with the latest Duke encounters
      description: Public endpoint returning a list the latest Duke encounters
      tags:
        - Encounter
      operationId: readLatestEncounters
      responses:
        200:
          description: A list of the latest Duke encounters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncounterList'
  /v1/encounters/{encounter_id}:
    get:
      summary: Get a single encounter
      description: Authorized endpoint returning a single encounter with all details
      tags:
        - Encounter
      operationId: readEncounter
      security:
        - KeycloakToken: []
      parameters:
        - name: encounter_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: The encounter's ID
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      responses:
        200:
          description: A single encounter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Encounter'
        404:
          description: Encounter not found

components:
  schemas:
    EncounterList:
      type: object
      description: A list of Duke encounters
      properties:
        encounters:
          type: array
          items:
            $ref: '#/components/schemas/Encounter'
    Encounter:
      type: object
      description: Represents a Duke encounter with all available details
      example:
        id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        user_id: 3fa85f65-1234-4562-b3fd-1c963f66afa6
        event: JavaOne
        description: At the bar
        likeliness: 10
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        event:
          type: string
          minLength: 5
          maxLength: 50
        date:
          type: string
          format: date
        description:
          type: string
          maxLength: 1024
          nullable: true
        likeliness:
          type: integer
          minimum: 1
          maximum: 10
    CreateEncounter:
      type: object
      description: Create a new Duke encounter with all required information
      example:
        event: JavaOne
        description: At the bar
      properties:
        event:
          type: string
          minLength: 5
          maxLength: 50
        description:
          type: string
          maxLength: 1024
          nullable: true
        date:
          type: string
          format: date
    User:
      type: object
      description: Represents a user of the web application
      example:
        id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        username: The Duke
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
          minLength: 3
          maxLength: 20
        creation_date:
          type: string
          format: date
  securitySchemes:
    KeycloakToken:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:8090/oauth2/authorize
          tokenUrl: http://localhost:8090/oauth2/authorize
          scopes: {}
